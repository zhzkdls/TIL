// 1. 연산자

// # 계산기

// 더하기라는 함수를 호출하면 내부에선  콘솔로그를 이용해서 출력하게 된다.
// (콘솔 로그를 하는데 뭘 출력을 하냐?  이 두 값을 뺀것(a + b)을 출력해라.)

// 더하기라는 함수(10, 5)라고적고 엔터하면 
// 15라는 숫자가 나타난다

// 나머지는 숙제

// 요약 
// 1.  + - * /
// 2. 함수 (정의 및 호출)
// 3. 출력 (console.log



// function 더하기(a, b) {
//     console.log(a + b);
// };

// 더하기(10, 5);  // 15

// function 빼기(a, b) {
//     console.log(a - b);
// };

// 빼기(40, 10); // 30

// function 나누기(a, b) {
//     console.log(a / b);
// };

// 나누기(10, 5); // 2

// function 곱하기(a,  b){
//     console.log(a * b);
// };

// 곱하기(10, 5); // 50





// 2. 조건문 

// # 체온계 만들기

// 체온계라는 함수를 만들고 소갈로 안에 a라는 조건을 넣습니다 그리고 if라는 조건을 걸어서 a이가 34도보다 낮으면 저온, a가 34도 보다 높고 37도보다 낮으면 정상, 그리고 37도 보다 높으면 고온으로 설정했다.  

// 체온계라는 함수에 (원하는 숫자를 넘으면) 정상 고온 저온이 라는 글자가 나온다.

// 요약 
// 1. IF을 사용해서 조건문을 만든다

// function 체온계(a) {
//     if (a < 34.0) {
//         console.log("저온");
//     }if(34.0 < a && a < 37.0) {
//         console.log("정상");
//     }if(37.0 < a) {
//         console.log("고온");
//     } 
// };

// 체온계 (20); // 저온
// 체온계 (40); // 고온
// 체온계 (35); // 정상


//3. 반복문

// # 구구단 만들기
// 이 함수의 단점은 2단 밖에 못한다 
// function 구구단() {
//     console.log(2 * 1);
//     console.log(2 * 2);
//     console.log(2 * 3);
//     console.log(2 * 4);
//     console.log(2 * 5);
//     console.log(2 * 6);
//     console.log(2 * 7);
//     console.log(2 * 8);
//     console.log(2 * 9);
// }
// 구구단(); 

//호출하게 되면 
// 2
// 4
// 6
// 8
// 10
// 12
// 14
// 16
// 18 식으로 나오게 된다.

// 구구단 함수()소갈로안에 a라는 값을 넣고 콘솔()소갈로 안에 앞 숫자만 a으로 변경하고,구구단()소갈로 안에 원하는 숫자 넣으면 원한는 구구단을 얻을수 있다.
// function 구구단(a) {
//     console.log(a * 1);
//     console.log(a * 2);
//     console.log(a * 3);
//     console.log(a * 4);
//     console.log(a * 5);
//     console.log(a * 6);
//     console.log(a * 7);
//     console.log(a * 8);
//     console.log(a * 9);
// }
// 구구단(4); 

//하지만 이렇게 하면 너무 재미가 없다 그리서 한가지 기능을 더 추가하기로 하자!! 
// 반복문 이라고 하는데 예시로 바로 보여줄께!!

// for (let i = 1; i < 10; i++) {
//     console.log(i)
// }
// i 가 1 부터 10보다 작으면 1을 더하기를 해라..그러면 1부터 9까지 순서대로 나온다.
// 처음에는 반복되는 수를 지정해준다 두번째로는 조건이 들어간다 i이는 10보다 작을때 까지 세번째로는 i를 증가시키는 ++을 사용한다.

// for (let i = 1; i <= 10; i++) {
//     console.log(i)
// }

// <= 이것은 같거나 작거나라서 10이라는 숫자이하까지만 나오게 된다(에시 1~10)


//다시 본론으로 돌아와서 아까 구구단에서 for 을 사용해서 반복문을 적용하자~! 뒷 숫자란에 i를 넣으면 간단하게 구구단을 사용할수 잇다. 

// function 구구단(a) {
//     for (let i = 1; i <= 10; i++) {
//         console.log(a * i);
//     }
    
// }
// 구구단(45);

// 중첩된 구구단을 만들기 응용문제(1)

// function 구구단(n){  //n:고정값
//     for(var i=1;i<10;i++) {  //i:가변값
//         console.log(n + "x" + i + "=" + n*i);
//     }
// }

// 구구단(2);  //2단 출력
// 구구단(3);  //3단 출력

// 중첩된 for문으로 학급반 만들기 응용문제(2)

// function 학급반 () {
//     for(let i = 1; i <= 6; i++){
//         for(let k = 1; k <=5; k++){
//             console.log(i + "학년" + k + "반");
//         }
//     }
// }
// 학급반();


//중첩 for문을 이용한 구구단 출력 응용문제(3)
// function 구구단(){
//     for(let i = 2; i <= 9; i++){
//         console.log(i + '단');
//         for(let k =1; k <= 9; k++){
//             let sum = i * k;
//             console.log(i + "*" + k + "=" + sum);
//         }
//     }
// }
// 구구단();


// 4. 변수 / 객체

// # 명함 만들기(1)

// 명함이라는 함수를 호출한다. 그리고 함수안에 명함에 필요한 내용을 입력을 해주는데 이름이라는 변수값을 따로 설정해준다 이렇게 해주는 이유는 나중에 이름만 변경하고 싶을 때 사용하기가 편하기 때문이다. 또 나이을 변수로 값을 지정해준다 하면 아까 했던 방식을 해주면 된다. 얼마든지 사용하면된다

// function 명함() {
//     let 이름 = "콩이"
//     let 나이 = "3살"

//     console.log("이름:" + 이름);
//     console.log("직업: 반려견");
//     console.log("나이:" + 나이);
//     console.log(이름 + "는 강아지 이름입니다.");
// }
// 명함();

// # 명함 만들기(2)

// 객체는 속성과 행위를 담고 있다.
// 자 객체를 담아서 출력하게 되면 {안에 객체안에 속성이 담아서 출력이 되는 것을 볼수있다}
// 행위는 뭘까요>? 명합을 출력하는것이다

// 객체밑에 어떤 접근을 하려면 . 점을 사용하면된다.  근데 에러나 난다?? 이름이 정의 하지 않았다고 한다 왤까?? 이름이라는 변수를 지정해주지 않아서 에러가 나는것이였다, 그러면 어떻게 하죠? this라는 단어와 . 을 사용해서 에러를 수정을 할수 있다.  this는 뭘까>>?? this는 이름이라는 것을 접근을 할꺼라는 뜻이다. 마찬가지로 나이에도 적용해주자.. 짠~!! 에러가 안나고 잘 되는것을 볼수가 있다..
let 명함 = {
    이름: "콩이",
    나이: "2 살",
    직업: "반려견",
    출력(){
        console.log("이름 : " + this.이름);
        console.log("나이 : " + this.나이);
        console.log("직업 : " + this.직업);
    }
}

console.log(명함);
명함.출력();

// 요약
//1.  명합이라는것을 만들기 위해 처음에는 변수를 선언하고 출력을 했습니다.
//2. 근데 변수들과 출력하는 행위 이 두가지를 한번에 감싸고 있는 객체라는 것을 사용함으로써 더 간편하게 만듬





